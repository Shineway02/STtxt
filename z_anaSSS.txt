z_anasss01:--z_anasss01
SET QUOTED_IDENTIFIER OFF
declare @t_mage float = case when '#non'=[1] then 0 else [1] end 
declare @t_bage float = case when '#non'=[2] then 0 else [2] end 
declare @t_mwage float = case when '#non'=[3] then 1 else [3] end 
declare @t_bwage float= case when '#non'=[4] then 1  else [4] end
declare @t_rage float= case when '#non'=[5] then 1  else [5] end
declare @t_rwage float= case when '#non'=[6] then 0 else [6] end
--declare @t_type float= case when '#non'=[7] then 0 else [7] end 
declare @r_len nvarchar(10)='[22]'  
---------------------------------------------------------------------------------
declare @a1 nvarchar(max)set @a1 = '0'+@t_mwage 
declare @con float(10) 
--set @con =(CONVERT(float,@t_bage)-CONVERT(float,@t_mage))/CONVERT(float,@t_rage) 
set @con =(@t_bwage-@t_mwage)/@t_rwage 
declare @i float set @i=0 
--declare @a2 float = convert(float,@t_mage) 
declare @a2 float = convert(float,@t_mwage) 
--declare @a3 float = convert(float,@t_rage) 
declare @a3 float = convert(float,@t_rwage) 
while(@i<@con) 
	begin 
		if( @a2+ @t_rwage <10 ) 
		begin 
			set @a2= @a2+@a3 
			set @a1=+@a1+'~0'+convert(nvarchar,@a2) 
		end 
	else 
	begin 
		set @a2= @a2+@a3 
		set @a1=@a1+'~'+convert(nvarchar,@a2)+'' 
	end 
		set @i=@i+1 
	end 

declare @tmp table( 
	gno nvarchar(2), 
	noa nvarchar(10), 
	namea nvarchar(max), 
	outdate nvarchar(max), 
	indate nvarchar(max), 
	birthday nvarchar(max), 
	workage int, 
	age int, 
	agerange nvarchar (20), 
	agecount int, 
	wagerange nvarchar (20), 
	wagecount int, 
	a1 nvarchar(10) ,a2 nvarchar(10), 
	a3 nvarchar(10),a4 nvarchar(10), 
	a5 nvarchar(10),a6 nvarchar(10), 
	a7 nvarchar(10),a8 nvarchar(10), 
	a10 nvarchar(10),a9 nvarchar(10), 
	a11 nvarchar(10),a12 nvarchar(10), 
	a13 nvarchar(10),a14 nvarchar(10), 
	a15 nvarchar(10),a16 nvarchar(10), 
	ac1 int ,ac2 int, 
	ac3 int,ac4 int, 
	ac5 int,ac6 int, 
	ac7 int,ac8 int, 
	ac10 int,ac9 int, 
	ac11 int,ac12 int 
) 

declare @c1 nvarchar(10) =case when len(rtrim(substring(rtrim(@a1),1,4)))<=4 then '0'+ substring(rtrim(@a1),1,4) else substring(rtrim(@a1),1,4) end 
declare @c2 nvarchar(10) = substring(rtrim(@a1),3,5) 
declare @c3 nvarchar(10) = substring(rtrim(@a1),6,5) 
declare @c4 nvarchar(10) = substring(rtrim(@a1),9,5) 
declare @c5 nvarchar(10) = substring(rtrim(@a1),12,5) 
declare @c6 nvarchar(10) =substring(rtrim(@a1),15,5) 
declare @c7 nvarchar(10) = substring(rtrim(@a1),18,5) 
declare @c8 nvarchar(10) = substring(rtrim(@a1),21,5) 
declare @c9 nvarchar(10) = substring(rtrim(@a1),24,5) 
declare @c10 nvarchar(10) = substring(rtrim(@a1),27,5) 
declare @c11 nvarchar(10) = substring(rtrim(@a1),30,5) 
declare @c12 nvarchar(10) = substring(rtrim(@a1),33,5) 
insert into @tmp(gno,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12 ) 

select top 1 '6' ,@c1 c1,@c2 c2,@c3 c3,@c4 c4,@c5 c5,@c6 c6,@c7 c7,@c8 c8,@c9 c9,@c10 c10,@c11 c11 
,@c12 c12 

insert into @tmp(gno,noa ,namea ,outdate ,indate ,birthday ) 
select '5',noa,namea, outdate,indate,birthday 
from sss 

insert into @tmp (gno ,noa ,namea ,outdate ,indate ,birthday ,workage ,age ) 
select 7,noa,namea,outdate,indate,birthday,
		case when isnull(CONVERT(float,left(outdate,3)),'')='' then YEAR(GETDATE())-1911 else CONVERT(float,left(outdate,3)) end
		-CONVERT(float,left(indate,3)) 
		,convert(nvarchar,convert(float,year(getdate()))-1911)-CONVERT(float,left(birthday,3)) 
from @tmp 
where gno='5' 

--declare @i int = 0 
declare @t_bmage nvarchar(10)= (convert(int,@t_mage)+convert(int,@t_rage)) 
declare @orage nvarchar(10)=@t_mage 

--篩選年齡 
while(@t_mage<@t_bage) 
	begin 
		insert into @tmp(gno ,noa ,namea ,outdate ,indate ,birthday ,workage,age,agerange) 
		select '0' ,noa ,namea ,outdate ,indate ,birthday ,workage ,age, 
				convert(nvarchar,@t_mage)+'~'+convert(nvarchar,@t_bmage ) 
	from @tmp 
	where age >= @t_mage and age <= @t_bmage 
		  and age < case when @t_bmage >@t_bage then @t_bage 
						 else @t_bmage end 
		  and gno = '7' 
group by gno ,noa ,namea ,outdate ,indate ,birthday ,workage ,age 
order by age	

set @t_mage = @t_bmage 
set @t_bmage = convert(int,@t_bmage)+convert(int,@t_rage)	


end 

--	select * 
--	from @tmp 
--	where gno='2' and namea='潘沂妤' 

--篩選年資 

declare @t_bwmage nvarchar(10)= (convert(int,@t_mwage)+convert(int,@t_rwage)) 
declare @owrage nvarchar(10)=@t_mwage 

while(@t_mwage<@t_bwage) 
	begin 
		insert into @tmp(gno ,noa ,namea ,outdate ,indate ,birthday ,workage,age,wagerange,agerange) 
		select '0' ,noa ,namea ,outdate ,indate ,birthday ,workage 
				,age,convert(nvarchar,@t_mwage)+'~'+convert(nvarchar,@t_bwmage),agerange 
		from @tmp 
		where workage >= @t_mwage and workage < @t_bwmage 
			  and workage < case when @t_bwmage > @t_bwage then @t_bwage 
								 else @t_bwmage end  
			  and gno='2' 
		order by workage	

set @t_mwage = @t_bwmage 
set @t_bwmage =convert(int,@t_bwmage)+convert(int,@t_rwage)	
set @i=@i+1 

end 
-------a1------------- 
declare @tmp1 table (gno nvarchar(10),agerange nvarchar(10) ,agecount int ) 
insert into @tmp1(gno,agerange,agecount) 
select gno,agerange ,case when len(@c1) <>0 then count(agerange) else 0 end 
from @tmp 
where workage >=left(@c1,2) and workage< right(@c1,2) and gno='0' 
group by gno,agerange 

insert into @tmp1 (gno ,agecount ) 
select '1',SUM(agecount) 
from @tmp1 
------a2--------------- 
declare @tmp2 table( gno nvarchar(2),agerange nvarchar (20),agecount int) 
insert into @tmp2(gno,agerange,agecount) 
select gno, agerange ,case when len(@c2) <>0 then count(agerange) else 0 end 
from @tmp 
where workage >= left(@c2,2) and workage< right(@c2,2) 
and gno='0' 
group by gno,agerange 

insert into @tmp2 (gno ,agecount ) 
select '1',SUM(agecount) 
from @tmp2 


------a3--------------- 
declare @tmp3 table (gno nvarchar(10),agerange nvarchar(10) ,agecount int ) 
insert into @tmp3(gno,agerange,agecount) 
select gno, agerange ,case when len(@c3) <>0 then count(agerange) else 0 end 
from @tmp 
where workage >= left(@c3,2) and workage< right(@c3,2) 
	  and gno='0' 
group by gno,agerange 

insert into @tmp3 (gno ,agecount ) 
select '1',SUM(agecount) 
from @tmp3 

------a4--------------- 
declare @tmp4 table (gno nvarchar(10),agerange nvarchar(10) ,agecount int) 
insert into @tmp4(gno,agerange,agecount) 
select gno, agerange ,case when len(@c4) <>0 then count(agerange) else 0 end 
from @tmp 
where workage >= left(@c4,2) and workage < right(@c4,2)  and gno='0' 
group by gno,agerange 

insert into @tmp4 (gno ,agecount ) 
select '1',SUM(agecount) 
from @tmp4 
------a5--------------- 
declare @tmp5 table (gno nvarchar(10),agerange nvarchar(10) ,agecount int) 
insert into @tmp5(gno,agerange,agecount) 
select gno, agerange ,case when len(@c5) <>0 then count(agerange) else 0 end 
from @tmp 
where workage >= left(@c5,2) and workage < right(@c5,2) and gno='0' 
group by gno,agerange 

insert into @tmp5 (gno ,agecount ) 
select '1',SUM(agecount) 
from @tmp5 
------a6--------------- 
declare @tmp6 table (gno nvarchar(10),agerange nvarchar(10) ,agecount int) 
insert into @tmp6(gno,agerange,agecount) 
select gno, agerange ,case when len(@c6) <>0 then count(agerange) else 0 end 
from @tmp 
where workage >= left(@c6,2) and workage< right(@c6,2) and gno='0' 
group by gno,agerange 

insert into @tmp6 (gno ,agecount ) 
select '1',SUM(agecount) 
from @tmp6 
------a7--------------- 
declare @tmp7 table (gno nvarchar(10),agerange nvarchar(10) ,agecount int) 
insert into @tmp7(gno,agerange,agecount) 
select gno, agerange ,case when len(@c7) <>0 then count(agerange) else 0 end 
from @tmp 
where workage >= left(@c7,2) and workage< right(@c7,2) and gno='0' 
group by gno,agerange 

insert into @tmp7 (gno ,agecount ) 
select '1',SUM(agecount) 
from @tmp7 
------a8--------------- 
declare @tmp8 table (gno nvarchar(10),agerange nvarchar(10) ,agecount int) 
insert into @tmp8(gno,agerange,agecount) 
select gno, agerange ,case when len(@c8)<>0 then count(agerange) else 0 end 
from @tmp 
where workage >= left(@c8,2) and workage < right(@c8,2) and gno='0' 
group by gno,agerange 

insert into @tmp8 (gno ,agecount ) 
select '1',SUM(agecount) 
from @tmp8 
------a9--------------- 
declare @tmp9 table (gno nvarchar(10),agerange nvarchar(10) ,agecount int) 
insert into @tmp9(gno,agerange,agecount) 
select gno, agerange ,case when len(@c9)<>0 then count(agerange) else 0 end a2 
from @tmp 
where workage >= left(@c9,2) and workage< right(@c9,2)  and gno='0' 
group by gno,agerange 

insert into @tmp9 (gno ,agecount ) 
select '1',SUM(agecount) 
from @tmp9 
------a10--------------- 
declare @tmp10 table (gno nvarchar(10),agerange nvarchar(10) ,agecount int) 
insert into @tmp10(gno,agerange,agecount) 
select gno, agerange ,case when len(@c10)<>0 then count(agerange) else 0 end a2 
from @tmp 
where workage >= left(@c10,2) and workage < right(@c10,2)  and gno='0' 
group by gno,agerange 

insert into @tmp10 (gno ,agecount ) 
select '1',SUM(agecount) 
from @tmp10 
------a11--------------- 
declare @tmp11 table (gno nvarchar(10),agerange nvarchar(10) ,agecount int) 
insert into @tmp11(gno,agerange,agecount) 
select gno, agerange ,case when len(@c11) <>0 then count(agerange) else 0 end a2 
from @tmp 
where workage >= left(@c11,2) and workage< right(@c11,2) 
and gno='0' 
group by gno,agerange 

insert into @tmp11 (gno ,agecount ) 
select '1',SUM(agecount) 
from @tmp11 


insert into @tmp(gno,ac1,ac2,ac3,ac4,ac5,ac6,ac7,ac8,ac9,ac10,ac11,ac12) 
select a.gno, 
	   case when a.agecount is null then 0 else a.agecount end, 
	   case when b.agecount is null then 0 else b.agecount end, 
	   case when c.agecount is null then 0 else c.agecount end, 
	   case when d.agecount is null then 0 else d.agecount end, 
	   case when e.agecount is null then 0 else e.agecount end, 
	   case when f.agecount is null then 0 else f.agecount end, 
	   case when g.agecount is null then 0 else g.agecount end, 
	   case when h.agecount is null then 0 else h.agecount end, 
	   case when i.agecount is null then 0 else i.agecount end, 
	   case when j.agecount is null then 0 else j.agecount end, 
	   case when k.agecount is null then 0 else k.agecount end, 
------------------------------------------------------------ 
	   sum((case when a.agecount IS null then 0 else a.agecount end ) + 
	   (case when b.agecount IS null then 0 else b.agecount end ) + 
	   (case when c.agecount is null then 0 else c.agecount end ) + 
	   (case when d.agecount is null then 0 else d.agecount end ) + 
	   (case when e.agecount is null then 0 else e.agecount end ) + 
	   (case when f.agecount is null then 0 else f.agecount end ) + 
	   (case when g.agecount is null then 0 else g.agecount end ) + 
	   (case when h.agecount is null then 0 else h.agecount end ) + 
	   (case when i.agecount is null then 0 else i.agecount end ) + 
	   (case when j.agecount is null then 0 else j.agecount end ) + 
	   (case when k.agecount is null then 0 else k.agecount end )) 
------------------------------------------------------------ 

from @tmp1 a left join @tmp2 b on a.gno =b.gno 
			 left join @tmp3 c on a.gno = c.gno 
			 left join @tmp4 d on a.gno = d.gno 
			 left join @tmp5 e on a.gno = e.gno 
			 left join @tmp6 f on a.gno = f.gno 
			 left join @tmp7 g on a.gno = g.gno 
			 left join @tmp8 h on a.gno = h.gno 
			 left join @tmp9 i on a.gno = i.gno 
			 left join @tmp10 j on a.gno = j.gno 
			 left join @tmp11 k on a.gno = k.gno 
where a.gno='1' 
group by a.gno ,a.agecount,b.agecount,c.agecount,d.agecount 
		 ,e.agecount,f.agecount,g.agecount,h.agecount,i.agecount 
		 ,j.agecount,k.agecount 

update @tmp set a1= 0,a2=0,a3=0,a4=0,a5=0,a6=0,a7=0,a8=0,a9=0,a10=0,a11=0,a12=0 where a1 is null 
update @tmp set agerange='999~999' where gno='1' 

select a.gno, a.agerange 
	   ,(case when l.agecount IS null then 0 else l.agecount end ) ab1 
	   ,(case when b.agecount IS null then 0 else b.agecount end )	ab2 
	   ,(case when c.agecount is null then 0 else c.agecount end ) ab3 
	   ,(case when d.agecount is null then 0 else d.agecount end ) ab4 
	   ,(case when e.agecount is null then 0 else e.agecount end ) ab5 
	   ,(case when f.agecount is null then 0 else f.agecount end ) ab6 
	   ,(case when g.agecount is null then 0 else g.agecount end ) ab7 
	   ,(case when h.agecount is null then 0 else h.agecount end ) ab8 
	   ,(case when i.agecount is null then 0 else i.agecount end ) ab9 
	   ,(case when j.agecount is null then 0 else j.agecount end ) ab10 
	   ,(case when k.agecount is null then 0 else k.agecount end ) ab11 
, 
------總計--------------------------------------------------------------- 
	  (case when l.agecount IS null then 0 else l.agecount end ) + 
	  (case when b.agecount IS null then 0 else b.agecount end ) + 
	  (case when c.agecount is null then 0 else c.agecount end ) + 
	  (case when d.agecount is null then 0 else d.agecount end ) + 
	  (case when e.agecount is null then 0 else e.agecount end ) + 
	  (case when f.agecount is null then 0 else f.agecount end ) + 
	  (case when g.agecount is null then 0 else g.agecount end ) + 
	  (case when h.agecount is null then 0 else h.agecount end ) + 
	  (case when i.agecount is null then 0 else i.agecount end ) + 
	  (case when j.agecount is null then 0 else j.agecount end ) + 
	  (case when k.agecount is null then 0 else k.agecount end ) toc 
---------------------------------------------------------------------- 
	 ,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10 b1,a11 b2,a12 b3 
	 ,a.ac1,a.ac2,a.ac3,a.ac4,a.ac5,a.ac6,a.ac7,a.ac8,a.ac9,a.ac10,a.ac11,a.ac12 

from @tmp a left join @tmp2 b on a.agerange = b.agerange 
	  	    left join @tmp3 c on a.agerange = c.agerange 
			left join @tmp4 d on a.agerange = d.agerange 
			left join @tmp5 e on a.agerange = e.agerange 
			left join @tmp6 f on a.agerange = f.agerange 
			left join @tmp7 g on a.agerange = g.agerange 
			left join @tmp8 h on a.agerange = h.agerange 
			left join @tmp9 i on a.agerange = i.agerange 
			left join @tmp10 j on a.agerange = j.agerange 
			left join @tmp11 k on a.agerange = k.agerange 
			left join @tmp1 l on l.agerange=a.agerange 
where a.gno='0' or a.gno='1' or a.gno='6' 
group by a.gno,a.agerange,b.agecount,c.agecount 
		,d.agecount,e.agecount,f.agecount ,g.agecount,h.agecount,i.agecount 
		,j.agecount,k.agecount,l.agecount,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10 ,a11 ,a12 
		,a.ac1,a.ac2,a.ac3,a.ac4,a.ac5,a.ac6,a.ac7,a.ac8,a.ac9,a.ac10,a.ac11,a.ac12 
order by a.agerange   ;

-------------------------------------------------------------------------------------------------------------- 
z_anasss02:--z_anasss02
declare @type nvarchar(max)=[7]
declare @t_smon nvarchar(max)=case when '#non'=[8] then '' else [8] end 
declare @t_emon nvarchar(max)=case when '#non'=[9] then '' else [9] end
declare @type1 nvarchar(10)=case when '#non'=[12] then '' else [12] end  
declare @r_len int=[22]

declare @result table(
	gno nvarchar(max),
	aa nvarchar(max),--月份
	ab float,--上月員工人數
	ac float,--本月員工人數
	ad float,--新進人數
	ae float,--離職人數
	af float,--新進人員比率(%)
	ag float,--離職人員比率(%)
	--下面避免月底月初進來的員工
	ah float,--1日人數
	ai float--31日人數
) 
------------------------------------------------------------------------------------------------------ 

declare @math1 nvarchar(50)=case when @type like '根據新進與總離職人數' then '新進人員/(新進人數+離職人數)*100'
								 when @type like '根據上月員工人數' then '新進人員/上月員工人數*100'
								 when @type like '根據本月員工人數' then '新進人員/本月員工人數*100'
								 when @type like '根據基準年月區間人數' then '新進人員/[(期初當月1日人數+期末當月最後一日人數)]/2*100' 
							end

declare @math2 nvarchar(50)=case when @type like '根據新進與總離職人數' then '離職人員/(新進人數+離職人數)*100'
								 when @type like '根據上月員工人數' then '離職人員/上月員工人數*100'
								 when @type like '根據本月員工人數' then '離職人員/本月員工人數*100'
								 when @type like '根據基準年月區間人數' then '離職人員/[(期初當月1日人數+期末當月最後一日人數)]/2*100' 
							end
 
declare @sex nvarchar(10)= case when @type1='男,女' then '1,0' when @type1='男' then '1' when @type1='女' then '0' else '' end 

declare @t_nowmon nvarchar(20)
declare @r_lenm int =6

if(@r_len!=4)
begin
	set @t_nowmon=CONVERT (VARCHAR(7), GETDATE(),12 )+0890000
	set @t_nowmon=left(@t_nowmon,3)+'/'+substring(@t_nowmon,4,2)
end
else
begin
	set @t_nowmon=CONVERT (VARCHAR(7), GETDATE(),20 )
	set @t_nowmon=left(@t_nowmon,4)+'/'+substring(@t_nowmon,6,2)
	set @r_lenm=7
end

if(@t_smon='')
begin
	if(@t_emon='')
	begin
		set @t_smon=@t_nowmon
	end
	else
	begin
		set @t_smon=@t_emon
	end
end

if(@t_emon='')
	set @t_emon=@t_nowmon

declare @t_premon nvarchar(20)
declare @t_tmpmon nvarchar(20)
set @t_tmpmon=@t_smon

while (@t_tmpmon<=@t_emon)
begin
	--上月月份
	set @t_premon=dbo.q_cdn(@t_tmpmon+'/01',-15)
	set @t_premon=LEFT(@t_premon,@r_lenm)
	
	insert @result (gno,aa,ab,ac,ad,ae,ah,ai)
	select '0',@t_tmpmon
	,(select count(*) from sss where (left(indate,@r_lenm)<=@t_premon or isnull(indate,'')='') and (isnull(outdate,'')='' or left(outdate,@r_lenm)>@t_premon) and CHARINDEX(sex,@sex)>0)
	,(select count(*) from sss where (left(indate,@r_lenm)<=@t_tmpmon or isnull(indate,'')='') and (isnull(outdate,'')='' or left(outdate,@r_lenm)>@t_tmpmon) and CHARINDEX(sex,@sex)>0)
	,(select count(*) from sss where left(indate,@r_lenm)=@t_tmpmon and CHARINDEX(sex,@sex)>0)
	,(select count(*) from sss where left(outdate,@r_lenm)=@t_tmpmon and CHARINDEX(sex,@sex)>0)
	,(select count(*) from sss where (indate<=@t_tmpmon+'/01' or isnull(indate,'')='') and (isnull(outdate,'')='' or outdate>@t_tmpmon+'/01') and CHARINDEX(sex,@sex)>0)
	,(select count(*) from sss where (indate<=@t_tmpmon+'/31' or isnull(indate,'')='') and (isnull(outdate,'')='' or outdate>@t_tmpmon+'/31') and CHARINDEX(sex,@sex)>0)

	set @t_tmpmon=dbo.q_cdn(@t_tmpmon+'/01',35)
	set @t_tmpmon=LEFT(@t_tmpmon,@r_lenm)
end

if((select count(*) from @result)>0)
begin
	insert @result
	select '1', CHAR(255),SUM(ab),SUM(ac),SUM(ad),SUM(ae),SUM(af),SUM(ag),SUM(ah),SUM(ai)
	from @result
end

update @result
set af=case when @type='根據新進與總離職人數' then case when (ad+ae)=0 then 0 else round(ad/(ad+ae)*100,2) end
when @type='根據上月員工人數' then case when ab=0 then 0 else round(ad/ab*100,2) end
when @type='根據本月員工人數' then case when ac=0 then 0 else round(ad/ac*100,2) end
when @type='根據基準年月區間人數' then case when (ah+ai)=0 then 0 else round(ad/((ah+ai)/2)*100,2) end
else 0 end
,ag=case when @type='根據新進與總離職人數' then case when (ad+ae)=0 then 0 else round(ae/(ad+ae)*100,2) end
when @type='根據上月員工人數' then case when ab=0 then 0 else round(ae/ab*100,2) end
when @type='根據本月員工人數' then case when ac=0 then 0 else round(ae/ac*100,2) end
when @type='根據基準年月區間人數' then case when (ah+ai)=0 then 0 else round(ae/((ah+ai)/2)*100,2) end
else 0 end

if(@r_len!=4)
begin
	select * ,convert(nvarchar,convert(float,left(@t_smon,@r_len))+1911)+'年'+ right(@t_smon,2)+'月 ~ ' + 
			 convert(nvarchar,convert(float,left(@t_emon,@r_len))+1911)+'年'+ right(@t_emon,2)+'月' yyyy,@type1 sx 
			 ,@math1 math1,@math2 math2
	from @result
end
else
begin
	select * ,convert(nvarchar,convert(float,left(@t_smon,@r_len)))+'年'+ right(@t_smon,2)+'月 ~ ' + 
			 convert(nvarchar,convert(float,left(@t_emon,@r_len)))+'年'+ right(@t_emon,2)+'月' yyyy,@type1 sx 
			 ,@math1 math1,@math2 math2
	from @result
end

; 
---------------------------------------------------------------------------------------------------------
z_anasss03:--z_anasss03
declare @t_smon nvarchar(max)=case when '#non'=[13] then '' else [13] end 
declare @t_emon nvarchar(max)=case when '#non'=[14] then '' else [14] end
declare @type nvarchar(10)=case when '#non'=[15] then '' else [15] end  
declare @r_len int=[22]  

declare @tmp table(
	gno nvarchar(10), 
	mon nvarchar(50),
	yy nvarchar(50), --年度
	mm nvarchar(50), --月份
	ab float,--上月員工人數
	ac float,--本月員工人數
	ad float,--新進人員
	ae float,--離職人員
	
	st nvarchar(50),--區分
	indate nvarchar(50),--到職日期
	outdate nvarchar(50),--離職日期
	partno nvarchar(50),--部門代號
	part nvarchar(50),--部門名稱
	noa nvarchar(50),--員工代號
	nass nvarchar(50)--員工姓名
) 

declare @t_nowmon nvarchar(20)
declare @r_lenm int =6

if(@r_len!=4)
begin
	set @t_nowmon=CONVERT (VARCHAR(7), GETDATE(),12 )+0890000
	set @t_nowmon=left(@t_nowmon,3)+'/'+substring(@t_nowmon,4,2)
end
else
begin
	set @t_nowmon=CONVERT (VARCHAR(7), GETDATE(),20 )
	set @t_nowmon=left(@t_nowmon,4)+'/'+substring(@t_nowmon,6,2)
	set @r_lenm=7
end

if(@t_smon='')
begin
	if(@t_emon='')
	begin
		set @t_smon=@t_nowmon
	end
	else
	begin
		set @t_smon=@t_emon
	end
end

if(@t_emon='')
	set @t_emon=@t_nowmon

declare @t_premon nvarchar(20)
declare @t_tmpmon nvarchar(20)
set @t_tmpmon=@t_smon

while (@t_tmpmon<=@t_emon)
begin
	--上月月份
	set @t_premon=dbo.q_cdn(@t_tmpmon+'/01',-15)
	set @t_premon=LEFT(@t_premon,@r_lenm)
	
	insert @tmp (gno,mon,yy,mm,ab,ac,ad,ae)
	select '0',@t_tmpmon,LEFT(@t_tmpmon,@r_len),RIGHT(@t_tmpmon,2)
	,(select count(*) from sss where (left(indate,@r_lenm)<=@t_premon or isnull(indate,'')='') and (isnull(outdate,'')='' or left(outdate,@r_lenm)>@t_premon))
	,(select count(*) from sss where (left(indate,@r_lenm)<=@t_tmpmon or isnull(indate,'')='') and (isnull(outdate,'')='' or left(outdate,@r_lenm)>@t_tmpmon))
	,(select count(*) from sss where (left(indate,@r_lenm)=@t_tmpmon ))
	,(select count(*) from sss where (left(outdate,@r_lenm)=@t_tmpmon))

	set @t_tmpmon=dbo.q_cdn(@t_tmpmon+'/01',35)
	set @t_tmpmon=LEFT(@t_tmpmon,@r_lenm)
end

insert @tmp (gno,mon)
select '1',mon from @tmp group by mon

insert @tmp (gno,mon,indate,outdate,partno,part,noa,nass)
select '2',a.mon,b.indate,b.outdate,b.partno,b.part,b.noa,b.namea 
from @tmp a left join sss b on (a.mon=left(isnull(b.indate,''),@r_lenm) or a.mon=left(isnull(b.outdate,''),@r_lenm))
where a.gno='1' and isnull(b.noa,'')!=''

update @tmp
set st=(case when LEFT(indate,@r_lenm)=mon and LEFT(outdate,@r_lenm)=mon then '新進,離職'
when LEFT(indate,@r_lenm)=mon then '新進'
when LEFT(outdate,@r_lenm)=mon then '離職'
else '' end)
where gno='2'

delete a
from @tmp a where gno='1'  and not exists (select * from @tmp where gno='2' and mon=a.mon)

select *,@t_smon smm,@t_emon emm from @tmp order by mon,gno,noa
;
--------------------------------------------------------------------------------------------------------
z_anasss04:--z_anasss04
SET QUOTED_IDENTIFIER OFF
declare @t_bdate nvarchar(15) =case when '#non'=[10] then '' else [10] end 
declare @t_edate nvarchar(15) =case when '#non'=[11] then '' else [11] end 
declare @type1 nvarchar(max) =case when '#non'=[15] then '' else [15] end 
declare @type2 nvarchar(10)=case when '#non'=[12] then '' else [12] end
declare @r_len nvarchar(10)='[22]'  
-------------------------------------------------------------------------------------------------------
declare @tmp table(
	gno nvarchar(1),
	noa nvarchar(50),
	namea nvarchar(50),
	birthday nvarchar(50),
	partno nvarchar(50),
	part nvarchar(50),
	age int,
	bm nvarchar(50),
	indate nvarchar(50),
	outdate nvarchar(50), 
	id nvarchar(50),
	jobno nvarchar(50),
	job nvarchar(50),
	years float
) 
if(@r_len!='4')
begin
	insert into @tmp 
	select '0',noa ,namea,birthday
			,partno ,partno
			,case when len(birthday)=0 then null else convert(float,year(getdate()))-1911-CONVERT(float,left(birthday,3)) end 
			,left(right(birthday,5),2) bm,indate,outdate ,id,jobno,job 
			,case when isnull(indate,'')='' then null else 
			case when len(outdate)=0 then convert(float,year(getdate()))-1911 else CONVERT(float,left(outdate,3)) end -CONVERT(float,left(indate,3)) 
			+round((case when len(outdate)=0 then convert(float,month(getdate())) else CONVERT(float,left(right(outdate,5),2)) end -CONVERT(float,left(right(indate,5),2)))/12,1)
			end
	from sss 
	where case when isnull(outdate,'')='' then '0' else '1' end like 
		  case when @type1 like '現況在職' then '0' when @type1 like '現況離職' then '1' when @type1='' then '' else '%' end 
		  and sex like case when @type2 like '女' then '0' when @type2 like '男' then '1' when @type2='' then '' else '%' end 
		  and left(right(birthday,5),2) between @t_bdate and @t_edate 
end
else 
begin
	insert into @tmp 
	select '0',noa ,namea,birthday
			,partno ,partno,
			case when len(birthday)=0 then null else convert(float,year(getdate()))-CONVERT(float,left(birthday,4)) end 
			,left(right(birthday,5),2) bmm,indate,outdate ,id ,jobno,job 
			,case when isnull(indate,'')='' then null else 
			case when len(outdate)=0 then convert(float,year(getdate())) else CONVERT(float,left(outdate,4)) end -CONVERT(float,left(indate,4)) 
			+round((case when len(outdate)=0 then convert(float,month(getdate())) else CONVERT(float,left(right(outdate,5),2)) end -CONVERT(float,left(right(indate,5),2)))/12,1)
			end
	from sss 
	where case when isnull(outdate,'')='' then '0' else '1' end like 
		  case when @type1 like '現況在職' then '0' when @type1 like '現況離職' then '1' when @type1='' then '' else '%' end 
		  and sex like case when @type2 like '女' then '0' when @type2 like '男' then '1' when @type2='' then '' else '%' end 
		  and left(right(birthday,5),2) between @t_bdate and @t_edate 
end
	  
select namea nnas,*
from @tmp 
order by bm,gno,noa,partno
;
--**************************************************************************************************
z_anasss05:--z_anasss05
SET QUOTED_IDENTIFIER OFF 
declare @t_bsssno nvarchar(20) = case when '#non'=[16] then '' else [16] end 
declare @t_esssno nvarchar(20) = case when '#non'=[17] then CHAR(255) else [17] end 
declare @t_option03 nvarchar(max) = case when '#non'=[18] then '' else [18] end 
declare @t_sort03 nvarchar(max) = case when '#non'=[19] then '' else [19] end 
declare @t_accy nvarchar(max) = '[20]'
declare @t_nameb nvarchar(max) = '[21]'
declare @cmd nvarchar(max)
--------------------------------------------------------------------------------------- 
set @t_sort03 = case when @t_sort03 ='partno' then 'partno,a.jobno,a.noa' else @t_sort03 end 

set @cmd = 
" select row_number()over(order by a."+@t_sort03+") rr,'1' gno,@t_nameb ww"+ 
",case when sex='1' then '男' else '女' end sxs,case when isnull(married,0)=1 then 'V' else '' end married,*"+ 
" ,b.part pp,case when len(isnull(outdate,''))>0 then '*' else '' end yy"+ 
" ,namea nsn,a.typea typps"+ 
" from sss a"+ 
" left join part b on a.partno=b.noa"+ 
" where a.noa between @t_bsssno and @t_esssno"+ 
" and ((charindex('in',@t_option03)>0 and len(isnull(outdate,''))=0) or (charindex('out',@t_option03)>0 and len(isnull(outdate,''))>0))"+ 
" order by a."+@t_sort03 
execute sp_executesql @cmd,N'@t_bsssno nvarchar(20),@t_esssno nvarchar(20),@t_nameb nvarchar(max),@t_option03 nvarchar(max)' 
,@t_bsssno=@t_bsssno,@t_esssno=@t_esssno,@t_nameb=@t_nameb,@t_option03=@t_option03
;